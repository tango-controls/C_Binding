#pragma rtGlobals = 2
#pragma version = 1.0
#pragma IgorVersion = 6.0

//==============================================================================
// THIS FILE HAS BEEN GENERATED BY THE TANGO BINDING FOR IGOR PRO - DO NOT EDIT 
//==============================================================================
//  In case you find a bug in the generated code or want to contribute to the   
// improvement of the Tango API code generator for Igor Pro, please contact the 
//         author: nicolas[DOT]leclercq[AT]synchrotron-soleil[DOT]fr            
//------------------------------------------------------------------------------
// File...........soleil_axis.ipf
// Generated on...mar. 9 oct. 2007
// Tango class....GalilAxis
// Tango device...galil/test_v2/ga.D [used to gen. this tango class API]
//==============================================================================

//==============================================================================
// DEPENDENCIES
//==============================================================================
#include "tango"

//==============================================================================
// axis_GetAcceleration
//==============================================================================
//	Function......reads the <acceleration> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....acceleration
//	Attr.desc.....acceleration for all movements in userunits /sec²
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetAcceleration(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetAcceleration (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="acceleration")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetAcceleration
//==============================================================================
//	Function......writes the specified value on the <acceleration> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....acceleration
//	Attr.desc.....acceleration for all movements in userunits /sec²
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_acceleration_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetAcceleration(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetAcceleration (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="acceleration", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetAccuracy
//==============================================================================
//	Function......reads the <accuracy> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....accuracy
//	Attr.desc.....accuracy of a movement:
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetAccuracy(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetAccuracy (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="accuracy")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetAccuracy
//==============================================================================
//	Function......writes the specified value on the <accuracy> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....accuracy
//	Attr.desc.....accuracy of a movement:
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_accuracy_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetAccuracy(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetAccuracy (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="accuracy", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetBacklash
//==============================================================================
//	Function......reads the <backlash> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....backlash
//	Attr.desc.....compensation for mechanical backlash by doing final move i...
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetBacklash(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetBacklash (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="backlash")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetBacklash
//==============================================================================
//	Function......writes the specified value on the <backlash> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....backlash
//	Attr.desc.....compensation for mechanical backlash by doing final move i...
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_backlash_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetBacklash(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetBacklash (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="backlash", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetBackwardLimitSwitch
//==============================================================================
//	Function......reads the <backwardLimitSwitch> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....backwardLimitSwitch
//	Attr.desc.....backward limit switch state
//	Attr.Access...READ
//	Attr.Format...SCALAR
//	Attr.Type.....Char or Boolean Scalar (8-bits integer) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetBackwardLimitSwitch(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetBackwardLimitSwitch (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="backwardLimitSwitch")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_GetDeceleration
//==============================================================================
//	Function......reads the <deceleration> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....deceleration
//	Attr.desc.....deceleration for all movements in userunits /sec²
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetDeceleration(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetDeceleration (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="deceleration")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetDeceleration
//==============================================================================
//	Function......writes the specified value on the <deceleration> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....deceleration
//	Attr.desc.....deceleration for all movements in userunits /sec²
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_deceleration_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetDeceleration(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetDeceleration (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="deceleration", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetForwardLimitSwitch
//==============================================================================
//	Function......reads the <forwardLimitSwitch> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....forwardLimitSwitch
//	Attr.desc.....forward limit switch state
//	Attr.Access...READ
//	Attr.Format...SCALAR
//	Attr.Type.....Char or Boolean Scalar (8-bits integer) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetForwardLimitSwitch(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetForwardLimitSwitch (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="forwardLimitSwitch")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_GetOffset
//==============================================================================
//	Function......reads the <offset> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....offset
//	Attr.desc.....adds an offset in user units to axiscurrentposition
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetOffset(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetOffset (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="offset")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetOffset
//==============================================================================
//	Function......writes the specified value on the <offset> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....offset
//	Attr.desc.....adds an offset in user units to axiscurrentposition
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_offset_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetOffset(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetOffset (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="offset", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetPosition
//==============================================================================
//	Function......reads the <position> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....position
//	Attr.desc.....read : position of axis in userunits
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetPosition(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetPosition (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="position")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetPosition
//==============================================================================
//	Function......writes the specified value on the <position> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....position
//	Attr.desc.....read : position of axis in userunits
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_position_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetPosition(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetPosition (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="position", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_GetState
//==============================================================================
//	Function......reads the <State> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....State
//	Attr.desc.....no description
//	Attr.Access...READ
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetState(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetState (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="State")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_GetStatus
//==============================================================================
//	Function......reads the <Status> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....Status
//	Attr.desc.....no description
//	Attr.Access...READ
//	Attr.Format...SCALAR
//	Attr.Type.....String Scalar [Igor String]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'variable' to store the attribute value
//		//- note that we could also use a global string (SVAR)
//		String attr_value
//		//- read the attribute and check error
//		if (axis_GetStatus(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetStatus (dev, value)
	String dev
	String& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="Status")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = ""
		return kERROR
	endif
	value = av.str_val
	return kNO_ERROR
end

//==============================================================================
// axis_GetVelocity
//==============================================================================
//	Function......reads the <velocity> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....velocity
//	Attr.desc.....velocity for all movements in userunits /sec
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the attribute value
//		//- note that we could also use a global variable (NVAR)
//		Variable attr_value
//		//- read the attribute and check error
//		if (axis_GetVelocity(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully read 
//		//- <attr_value> now contains the attribute value
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_GetVelocity (dev, value)
	String dev
	Variable& value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="velocity")
	if (tango_read_attr(av) == kERROR)
		tango_display_error()
		value = NAN
		return kERROR
	endif
	value = av.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_SetVelocity
//==============================================================================
//	Function......writes the specified value on the <velocity> attribute
//	Dev.class.....GalilAxis
//	Attr.name.....velocity
//	Attr.desc.....velocity for all movements in userunits /sec
//	Attr.Access...READ-WRITE
//	Attr.Format...SCALAR
//	Attr.Type.....Double Scalar (64-bits float) [Igor Variable]
//	Example.......the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		//- the name of the target device
//		String dev_name = "my/tango/device"
//		//- specify the attribute value (i.e. the value to be applied)
//		//- this value can be stored into a local or a global variable
//		NVAR attr_value = root:my_df:my_velocity_value
//		//- change the value of our global variable
//		attr_value = 123456.789
//		//- apply the value and check error
//		if (axis_SetVelocity(dev_name, attr_value) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the value was successfully applied
//		return kNO_ERROR
//	end
//==============================================================================
function axis_SetVelocity (dev, value)
	String dev
	Variable value
	Struct AttributeValue av
	tango_init_attr_val(av, dev=dev, attr="velocity", nval=value)
	if (tango_write_attr(av) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_Backward
//==============================================================================
//	Function.......executes the <Backward> command
//	Dev.class......GalilAxis
//	Cmd.name.......Backward
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_Backward(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_Backward (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "Backward") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_ComputeNewOffset
//==============================================================================
//	Function.......executes the <ComputeNewOffset> command
//	Dev.class......GalilAxis
//	Cmd.name.......ComputeNewOffset
//	Arg-in type....Double (64-bit float) [Igor Variable]
//	Arg-in desc....the position you want to have here and now
//	Arg-out type...None
//	Arg-out desc...the position you want to have here and now
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- specify the argin value (i.e. the value to be passed to the cmd)
//		//- it can a local or a global variable (global in this example)
//		NVAR argin_val = root:my_df:my_val
//		//- execute the command and check error
//		if (axis_ComputeNewOffset(dev_name, argin_val) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_ComputeNewOffset (dev_name, in_val)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- the command input arg.
	Variable in_val
	//- here we enter the magical world of tango...
	Struct CmdArgIO cai
	tango_init_cmd_argio (cai)
	cai.var_val = in_val
	if (tango_cmd_inout(dev_name, "ComputeNewOffset", arg_in = cai) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_DefinePosition
//==============================================================================
//	Function.......executes the <DefinePosition> command
//	Dev.class......GalilAxis
//	Cmd.name.......DefinePosition
//	Arg-in type....Double (64-bit float) [Igor Variable]
//	Arg-in desc....initialisation position in encoder units
//	Arg-out type...None
//	Arg-out desc...initialisation position in encoder units
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- specify the argin value (i.e. the value to be passed to the cmd)
//		//- it can a local or a global variable (global in this example)
//		NVAR argin_val = root:my_df:my_val
//		//- execute the command and check error
//		if (axis_DefinePosition(dev_name, argin_val) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_DefinePosition (dev_name, in_val)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- the command input arg.
	Variable in_val
	//- here we enter the magical world of tango...
	Struct CmdArgIO cai
	tango_init_cmd_argio (cai)
	cai.var_val = in_val
	if (tango_cmd_inout(dev_name, "DefinePosition", arg_in = cai) == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_Forward
//==============================================================================
//	Function.......executes the <Forward> command
//	Dev.class......GalilAxis
//	Cmd.name.......Forward
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_Forward(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_Forward (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "Forward") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_Init
//==============================================================================
//	Function.......executes the <Init> command
//	Dev.class......GalilAxis
//	Cmd.name.......Init
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_Init(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_Init (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "Init") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_InitializeRefPosition
//==============================================================================
//	Function.......executes the <InitializeReferencePosition> command
//	Dev.class......GalilAxis
//	Cmd.name.......InitializeReferencePosition
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_InitializeReferencePosition(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_InitializeRefPosition (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "InitializeReferencePosition") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_MotorOFF
//==============================================================================
//	Function.......executes the <MotorOFF> command
//	Dev.class......GalilAxis
//	Cmd.name.......MotorOFF
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_MotorOFF(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_MotorOFF (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "MotorOFF") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_MotorON
//==============================================================================
//	Function.......executes the <MotorON> command
//	Dev.class......GalilAxis
//	Cmd.name.......MotorON
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_MotorON(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_MotorON (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "MotorON") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

//==============================================================================
// axis_State
//==============================================================================
//	Function.......executes the <State> command
//	Dev.class......GalilAxis
//	Cmd.name.......State
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...Device State [Igor Variable]
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- use a local 'variable' to store the command result
//		Variable argout_val
//		//- execute the command and check error
//		if (axis_State(dev_name, argout_val) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//- <argout_val> now contains the command result
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_State (dev_name, out_val)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- the cmd output arg. - variable reference
	//- the cmd result will be stored into the var. referenced by <out_val>
	Variable& out_val
	//- here we enter the magical world of tango...
	Struct CmdArgIO cao
	tango_init_cmd_argio (cao)
	if (tango_cmd_inout(dev_name, "State", arg_out = cao) == kERROR)
		tango_display_error()
		return kERROR
	endif
	out_val = cao.var_val
	return kNO_ERROR
end

//==============================================================================
// axis_Status
//==============================================================================
//	Function.......executes the <Status> command
//	Dev.class......GalilAxis
//	Cmd.name.......Status
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...String [Igor String]
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- use a local 'string' to store the command result
//		String argout_str
//		//- execute the command and check error
//		if (axis_Status(dev_name, argout_str) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//- <argout_str> now contains the command result
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_Status (dev_name, out_str)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- the cmd output arg. - string reference
	//- the cmd result will be stored into the str. referenced by <out_str>
	String& out_str
	//- here we enter the magical world of tango...
	Struct CmdArgIO cao
	tango_init_cmd_argio (cao)
	if (tango_cmd_inout(dev_name, "Status", arg_out = cao) == kERROR)
		tango_display_error()
		return kERROR
	endif
	out_str = cao.str_val
	return kNO_ERROR
end

//==============================================================================
// axis_Stop
//==============================================================================
//	Function.......executes the <Stop> command
//	Dev.class......GalilAxis
//	Cmd.name.......Stop
//	Arg-in type....None
//	Arg-in desc....uninitialised
//	Arg-out type...None
//	Arg-out desc...uninitialised
//	Example........the following code shows how to use this function
//------------------------------------------------------------------------------
//	function myFunction ()
//		String dev_name = "my/tango/device"
//		//- execute the command and check error
//		if (axis_Stop(dev_name) == kERROR)
//			//- an error occurred
//			return kERROR
//		endif
//		//- the command was successfully executed
//		//...
//		return kNO_ERROR
//	end
//==============================================================================
function axis_Stop (dev_name)
	//- the 'target' device name (e.g. "galil/test_v2/ga.D")
	String dev_name
	//- here we enter the magical world of tango...
	if (tango_cmd_inout(dev_name, "Stop") == kERROR)
		tango_display_error()
		return kERROR
	endif
	return kNO_ERROR
end

